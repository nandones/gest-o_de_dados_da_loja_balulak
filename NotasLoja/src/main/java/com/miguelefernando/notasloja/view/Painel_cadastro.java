/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.miguelefernando.notasloja.view;

import java.awt.BorderLayout;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import com.miguelefernando.DAO.PessoaDAO;
import static com.miguelefernando.notasloja.view.Janela.idioma1;
import static com.miguelefernando.notasloja.view.Janela.pais1;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.security.Principal;
import java.sql.SQLException;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Painel que realiza o cadastro do cliente<br>
 * Inserindo-o no banco de dados
 *
 * @author Miguel
 * @since 04/24
 * @version 1.0
 */
public class Painel_cadastro extends javax.swing.JPanel {
    public ResourceBundle traducoes1;

    /**
     * Creates new form Painel_cadastro
     */
    public Painel_cadastro() {
        initComponents();
        ResourceBundle traducoes = null;
        InputStream newInputStream;
  
        String nomeArquivo = "./idiomas/MessagesBundle_"+idioma1+"_"+pais1+".properties";
        System.out.println(nomeArquivo);
        try {
            newInputStream = Files.newInputStream(Paths.get(nomeArquivo));
            traducoes = new PropertyResourceBundle(newInputStream);
            System.out.println(traducoes);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        lb_nome.setText(traducoes.getString("lb_nome"));
        lb_cidade.setText(traducoes.getString("lb_cidade"));
        lb_uf.setText(traducoes.getString("lb_uf"));
        lb_cpf.setText(traducoes.getString("lb_cpf"));
        bt_voltar.setText(traducoes.getString("bt_voltar"));
        bt_cadastrar.setText(traducoes.getString("bt_cadastrar"));
        traducoes1 = traducoes;
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lb_nome = new javax.swing.JLabel();
        jtext_nome = new javax.swing.JTextField();
        jtext_cpf = new javax.swing.JTextField();
        lb_cpf = new javax.swing.JLabel();
        jtext_cidade = new javax.swing.JTextField();
        lb_cidade = new javax.swing.JLabel();
        combobox_uf = new javax.swing.JComboBox<>();
        lb_uf = new javax.swing.JLabel();
        bt_cadastrar = new javax.swing.JButton();
        bt_voltar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel1.setText("BALULAK");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(156, 11, -1, -1));

        lb_nome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lb_nome.setText("Nome:");
        add(lb_nome, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jtext_nome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(jtext_nome, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 420, -1));

        jtext_cpf.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtext_cpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtext_cpfKeyTyped(evt);
            }
        });
        add(jtext_cpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 420, -1));

        lb_cpf.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lb_cpf.setText("CPF:");
        add(lb_cpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jtext_cidade.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(jtext_cidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 280, -1));

        lb_cidade.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lb_cidade.setText("Cidade:");
        add(lb_cidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        combobox_uf.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        combobox_uf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PR", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MS", "MT", "MG", "PA", "PB", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        add(combobox_uf, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 190, 90, -1));

        lb_uf.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lb_uf.setText("UF:");
        add(lb_uf, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 190, -1, -1));

        bt_cadastrar.setBackground(new java.awt.Color(0, 255, 0));
        bt_cadastrar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bt_cadastrar.setText("Cadastrar");
        bt_cadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_cadastrarMouseClicked(evt);
            }
        });
        add(bt_cadastrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 390, 130, 50));

        bt_voltar.setBackground(new java.awt.Color(255, 51, 51));
        bt_voltar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bt_voltar.setText("Voltar");
        bt_voltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_voltarMouseClicked(evt);
            }
        });
        add(bt_voltar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 393, 130, 50));
    }// </editor-fold>//GEN-END:initComponents
    /**
    * Método para inserir os dados do cliente em suas respectivas labels
    * @param evt java.awt.event.MouseEvent
    * @author Miguel
    * @since 04/24
    * @version 1.0
    */
    private void bt_cadastrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_cadastrarMouseClicked
    String nome = jtext_nome.getText();
    String cpf = jtext_cpf.getText();
    String cidade = jtext_cidade.getText(); 
    nome = nome.toUpperCase();
    cidade = cidade.toUpperCase();
    String uf = (String) combobox_uf.getSelectedItem();
    
    if (uf == null) {
        JOptionPane.showMessageDialog(null, "ERROR");
    } else if(verificarFormatoCPF(cpf)==false){
        JOptionPane.showMessageDialog(null, "ERROR");
        jtext_cpf.setText("");
            }else if(nome != null && cpf!=null && cidade !=null){
                cpf = formatarCPF(cpf);
                PessoaDAO pessoa = new PessoaDAO(nome, cidade, uf, cpf);
                pessoa.SalvarPessoa(); //Logger.getLogger(Painel_cadastro.class.getName()).log(Level.SEVERE, null, ex);
                Janela.p3 = new Painel_clientes();
                JFrame maininterface = (JFrame) SwingUtilities.getWindowAncestor(this);
                maininterface.getContentPane().remove(this);
                maininterface.add(Janela.p3, BorderLayout.CENTER);
                maininterface.pack();
                JOptionPane.showMessageDialog(null, traducoes1.getString("message_sucesso")); 
            }else{
                JOptionPane.showMessageDialog(null, "ERROR");
            }
    }//GEN-LAST:event_bt_cadastrarMouseClicked
    /**
    * Volta para o painel clientes
    * @param evt java.awt.event.MouseEvent
    * @author Miguel
    * @since 04/24
    * @version 1.0
    */
    private void bt_voltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_voltarMouseClicked
        Janela.p3 = new Painel_clientes();
        JFrame maininterface = (JFrame) SwingUtilities.getWindowAncestor(this);
        maininterface.getContentPane().remove(this);
        maininterface.add(Janela.p3, BorderLayout.CENTER);
        maininterface.pack();
    }//GEN-LAST:event_bt_voltarMouseClicked
    /**
    * chama o método formatacaoCPF.
    @param evt java.awt.event.MouseEvent
    * @author Miguel
    * @since 04/24
    * @version 1.0
    */
    private void jtext_cpfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtext_cpfKeyTyped
        formatacaoCPF(evt);
    }//GEN-LAST:event_jtext_cpfKeyTyped

    /**
    * Realiza a verificação se o cpf inserido é válido.
    * @param cpf
    * @return booleano verificação do cpf
    * @author Miguel
    * @since 04/24
    * @version 1.0
    */
    public boolean verificarFormatoCPF(String cpf) {
        // Remove caracteres não numéricos do CPF
        cpf = cpf.replaceAll("[^0-9]", "");
        
        // Verifica se o CPF tem 11 dígitos
        if (cpf.length() != 11) {
            return false;
        }
        
        // Verifica se todos os dígitos são iguais, o que é inválido para CPF
        boolean todosDigitosIguais = true;
        for (int i = 1; i < cpf.length(); i++) {
            if (cpf.charAt(i) != cpf.charAt(0)) {
                todosDigitosIguais = false;
                break;
            }
        }
        if (todosDigitosIguais) {
            return false;
        }
        
        // Verifica se o CPF é válido
        int soma = 0;
        for (int i = 0; i < 9; i++) {
            soma += (cpf.charAt(i) - '0') * (10 - i);
        }
        int resto = soma % 11;
        int digitoVerificador1 = (resto < 2) ? 0 : (11 - resto);

        soma = 0;
        for (int i = 0; i < 10; i++) {
            soma += (cpf.charAt(i) - '0') * (11 - i);
        }
        resto = soma % 11;
        int digitoVerificador2 = (resto < 2) ? 0 : (11 - resto);

        // Verifica se os dígitos verificadores estão corretos
        if ((cpf.charAt(9) - '0' != digitoVerificador1) || (cpf.charAt(10) - '0' != digitoVerificador2)) {
            return false;
        }
        
        // Se chegou até aqui, o CPF é válido
        return true;
    }
    
    /**
     * Realiza a formatação do cpf (###.###.###-##).
    * @param cpf
    * @author Miguel
    * @since 04/24
    * @version 1.0
    */
    public static String formatarCPF(String cpf) {
        if (cpf == null || cpf.length() != 11) {
            throw new IllegalArgumentException("CPF inválido");
        }

        // Formatar o CPF com pontos e hífen
        return cpf.substring(0, 3) + "." +
               cpf.substring(3, 6) + "." +
               cpf.substring(6, 9) + "-" +
               cpf.substring(9);
    }
    /**
    * Impede a digitação de digitos que não sejam números para evitar erros na verificação de cpf
    * @param evt
    * @author Miguel
    * @since 04/24
    * @version 1.0
    */
    public void formatacaoCPF(java.awt.event.KeyEvent evt){
        String caracteres="0987654321";
        if(!caracteres.contains(evt.getKeyChar()+"")){
            evt.consume();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_cadastrar;
    private javax.swing.JButton bt_voltar;
    private javax.swing.JComboBox<String> combobox_uf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jtext_cidade;
    private javax.swing.JTextField jtext_cpf;
    private javax.swing.JTextField jtext_nome;
    private javax.swing.JLabel lb_cidade;
    private javax.swing.JLabel lb_cpf;
    private javax.swing.JLabel lb_nome;
    private javax.swing.JLabel lb_uf;
    // End of variables declaration//GEN-END:variables
}
